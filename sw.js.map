{"version":3,"sources":["webpack://multiple-choice-quiz/./src/sw.ts"],"names":["cacheNames","code","asset","webfont","quizzes","self","addEventListener","event","dividedAssets","__WB_MANIFEST","reduce","acc","next","url","indexOf","push","definedCaches","name","assets","waitUntil","tasks","map","async","c","cache","caches","open","addAll","Promise","all","storedCaches","keys","expectedCaches","Object","values","filter","delete","request","mode","respondWith","match","then","response","some","startsWith","add","fetch","method","cacheName","data","action","skipWaiting"],"mappings":"yBAOA,IAAI,EAAa,CACb,KAAM,gDACN,MAAO,WACP,QAAS,UACT,QAAS,WAGb,KAAK,iBAAiB,WAAW,SAAU,GACvC,IAAI,EAAgB,i1EAAK,cAAc,QAAO,CAAC,EAAK,KAC5C,EAAK,IAAI,QAAQ,cAAgB,EACjC,EAAI,MAAM,KAAK,EAAK,KAEf,EAAK,IAAI,QAAQ,aAAe,EACrC,EAAI,QAAQ,KAAK,EAAK,KAGtB,EAAI,KAAK,KAAK,EAAK,KAEhB,IACR,CAAE,MAAO,GAAI,KAAM,GAAI,QAAS,KAC/B,EAAgB,CAChB,CACI,KAAM,EAAW,KACjB,OAAQ,IACD,EAAc,KACjB,eAGR,CACI,KAAM,EAAW,MACjB,OAAQ,EAAc,OAE1B,CACI,KAAM,EAAW,QACjB,OAAQ,CAAC,0DACL,4EAGR,CACI,KAAM,EAAW,QACjB,OAAQ,EAAc,UAG9B,EAAM,UAAU,WACZ,IAAI,EAAQ,EAAc,KAAI,MAAM,IAChC,IAAI,QAAc,OAAO,KAAK,EAAE,YAC1B,EAAM,OAAO,EAAE,iBAEnB,QAAQ,IAAI,IALN,OASpB,KAAK,iBAAiB,YAAY,IAC9B,EAAM,UAAU,WACZ,IAAI,QAAqB,OAAO,OAC5B,EAAiB,OAAO,OAAO,GAC/B,EAAQ,EAAa,QAAO,GAAK,EAAe,QAAQ,GAAK,IAAG,KAAI,MAAM,UACpE,OAAO,OAAO,YAElB,QAAQ,IAAI,IANN,OAWpB,KAAK,iBAAiB,SAAS,SAAU,GACrC,GAA2B,aAAvB,EAAM,QAAQ,KASlB,EAAM,YACF,OAAO,MAAM,EAAM,SAAS,MAAK,SAAU,GACvC,OAAI,IAGK,CAAC,4BACN,gCAAgC,MAAK,GAAO,EAAM,QAAQ,IAAI,WAAW,KACzE,EAAM,UAAU,kBACL,OAAO,KAAK,EAAW,UAAU,IAAI,EAAM,UADtC,IAIX,EAAM,QAAQ,IAAI,QAAQ,cAAgB,GAC/C,EAAM,UAAU,kBACL,OAAO,KAAK,EAAW,UAAU,IAAI,EAAM,UADtC,IAIb,MAAM,EAAM,kBAzB3B,CACI,GAA6B,QAAzB,EAAM,QAAQ,OACd,OAEJ,EAAM,YAAY,OAAO,MAAM,aAAc,CAAE,UAAW,EAAW,OAAQ,MAAK,GACvE,GAAY,MAAM,EAAM,gBAyB3C,KAAK,iBAAiB,WAAY,IACJ,gBAAtB,EAAM,KAAK,QACX,KAAK","file":"sw.js","sourceRoot":"","sourcesContent":["export default null;\ndeclare var self: ServiceWorkerGlobalScope;\ndeclare global {\n    interface WorkerGlobalScope {\n        __WB_MANIFEST: Array<{ revision: null, url: string }>;\n    }\n}\nlet cacheNames = {\n    code: `code-${__CACHENAME}`,\n    asset: \"asset-v1\",\n    webfont: \"webfont\",\n    quizzes: \"quizzes\"\n};\n\nself.addEventListener(\"install\", function (event) {\n    let dividedAssets = self.__WB_MANIFEST.reduce((acc, next) => {\n        if (next.url.indexOf(\"favicons/\") > -1) {\n            acc.asset.push(next.url);\n        }\n        else if (next.url.indexOf(\"quizzes/\") > -1) {\n            acc.quizzes.push(next.url)\n        }\n        else {\n            acc.code.push(next.url);\n        }\n        return acc;\n    }, { asset: [], code: [], quizzes: [] });\n    let definedCaches = [\n        {\n            name: cacheNames.code,\n            assets: [\n                ...dividedAssets.code,\n                \"index.html\"\n            ]\n        },\n        {\n            name: cacheNames.asset,\n            assets: dividedAssets.asset,\n        },\n        {\n            name: cacheNames.webfont,\n            assets: [\"https://fonts.googleapis.com/icon?family=Material+Icons\",\n                \"https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap\"\n            ]\n        },\n        {\n            name: cacheNames.quizzes,\n            assets: dividedAssets.quizzes\n        }\n    ];\n    event.waitUntil((async () => {\n        let tasks = definedCaches.map(async c => {\n            let cache = await caches.open(c.name);\n            await cache.addAll(c.assets);\n        });\n        await Promise.all(tasks);\n    })());\n});\n\nself.addEventListener(\"activate\", event => {\n    event.waitUntil((async () => {\n        let storedCaches = await caches.keys();\n        let expectedCaches = Object.values(cacheNames);\n        let tasks = storedCaches.filter(c => expectedCaches.indexOf(c) < 0).map(async c => {\n            await caches.delete(c);\n        })\n        await Promise.all(tasks);\n    })());\n});\n\n\nself.addEventListener(\"fetch\", function (event) {\n    if (event.request.mode === \"navigate\") {\n        if (event.request.method !== \"GET\") {\n            return;\n        }\n        event.respondWith(caches.match(\"index.html\", { cacheName: cacheNames.code }).then(response => {\n            return response || fetch(event.request);\n        }));\n        return;\n    }\n    event.respondWith(\n        caches.match(event.request).then(function (response) {\n            if (response) {\n                return response;\n            }\n            else if ([\"https://fonts.gstatic.com\",\n                \"https://fonts.googleapis.com\"].some(url => event.request.url.startsWith(url))) {\n                event.waitUntil((async () => {\n                    (await caches.open(cacheNames.webfont)).add(event.request);\n                })());\n            }\n            else if (event.request.url.indexOf(\"/quizzes/\") > -1) {\n                event.waitUntil((async () => {\n                    (await caches.open(cacheNames.quizzes)).add(event.request);\n                })());\n            }\n            return fetch(event.request);\n        })\n    );\n});\n\nself.addEventListener(\"message\", (event) => {\n    if (event.data.action === \"skipWaiting\") {\n        self.skipWaiting();\n    }\n});"]}